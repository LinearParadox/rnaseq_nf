wave.strategy = ['dockerfile','container']
params.outdir = "results"
docker.runOptions = '-u $(id -u):$(id -g)'

/*
STAR PARAMETERS
*/
params.star_align = true // whether to perform STAR alignment, default is true
params.genome = "-"
params.star_index = "-"
params.readlength = 100

/*
MANDATORY PARAMETERS
*/
params.samplesheet = "-"
params.gtf = "-"
params.salmon_transcriptome = '-'
params.design_matrix = "-" // path to design matrix. Generate in R using model.matrix()
params.contrasts = "-" // path to contrast matrix.
params.organism = "human" // 'human' or 'mouse'
/*
SALMON PARAMETERS
*/
params.gibbs_sampling = 200 // number of gibbs samples for salmon. Used for transcript quantification. 200 should be reasonable
params.gc_bias = true // whether to use GC bias correction in salmon
params.seq_bias = true // whether to use sequence bias correction in salmon
params.pos_bias = true // whether to use position bias correction in salmon
params.dump_eq = false // whether to dump equivalence classes in salmon
params.salmon_index = '-'
params.library_type = 'A' // 'A' for automatic, 'ISR' for stranded, 'ISF' for stranded forward, 'FR' for stranded reverse
params.kmer_size = 31 // k-mer size for salmon index generation, default is 31. Shouldn't really have to change this
/*
DEG Parameters
*/
params.min_gs_size = 50 // minimum gene set size for GSEA analysis
params.max_gs_size = 500 // maximum gene set size for GSEA analysis
params.deg_only = false // if true, skip counting and take salmon quant files directly
/*
RESOURCE PARAMETERS
*/
process {
    withLabel: star {
        cpus = 16
        memory = {64.GB + task.attempt * 32.GB}
        maxRetries = 2
        errorStrategy = { task.exitStatus == 140 ? 'retry' : 'terminate' }
    }
    withLabel: salmon {
        cpus = 16
        memory = {24.GB + task.attempt * 8.GB}
        maxRetries = 2
        errorStrategy = { task.exitStatus == 140 ? 'retry' : 'terminate' }
    }
    withLabel: fastp {
        cpus = 4
        memory = {12.GB + task.attempt * 8.GB}
        maxRetries = 2
        errorStrategy = { task.exitStatus == 140 ? 'retry' : 'terminate' }
    }
}


